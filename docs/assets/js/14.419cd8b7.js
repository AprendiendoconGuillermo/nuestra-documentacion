(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{402:function(a,e,s){"use strict";s.r(e);var t=s(31),r=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"_4-modulo-iv-tipos-de-datos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-modulo-iv-tipos-de-datos"}},[a._v("#")]),a._v(" 4. Módulo IV. Tipos de Datos")]),a._v(" "),s("div",{staticStyle:{"text-align":"center"}},[s("iframe",{attrs:{width:"560",height:"315",src:"https://www.youtube.com/embed/CajD_yD2bds",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""}})]),a._v(" "),s("h2",{attrs:{id:"_4-1-primitivos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-primitivos"}},[a._v("#")]),a._v(" 4.1 Primitivos")]),a._v(" "),s("p",[a._v("Representan un dato único y no se consideran objetos; y Java soporta 8 tipos de datos primitivos y son los que se indican en la Tabla 1.")]),a._v(" "),s("div",{staticStyle:{"text-align":"center"}},[s("img",{attrs:{src:a.$withBase("/img/tipos-primitivos.png"),alt:"  Tabla 1. Sánchez Allende, J. Tipos primitivos Java"}}),a._v(" "),s("p",[a._v("Tabla 1. Sánchez Allende, J. Tipos primitivos Java")])]),a._v(" "),s("p",[a._v("Los tipos primitivos se pueden clasificar en:")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("Números enteros")]),a._v(" ← permiten representar número enteros positivos y negativos con distintos rangos de valores.")]),a._v(" "),s("li",[s("strong",[a._v("Números reales")]),a._v(" ← se dividen en long y float, dependiendo la cantidad de decimales que puedan abarcar.")]),a._v(" "),s("li",[s("strong",[a._v("Caracteres")]),a._v(" ← representa cualquier carácter individual.")]),a._v(" "),s("li",[s("strong",[a._v("Booleano")]),a._v(" ← guarda un valor lógico que puede ser verdadero (true) y falso (false).")])]),a._v(" "),s("h3",{attrs:{id:"_4-1-1-literales"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-literales"}},[a._v("#")]),a._v(" 4.1.1. Literales")]),a._v(" "),s("p",[a._v("En el punto anterior vimos los tipos primitivos, ahora toca ver cómo asignar los valores.")]),a._v(" "),s("h4",{attrs:{id:"_4-1-1-1-numeros-enteros"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-1-numeros-enteros"}},[a._v("#")]),a._v(" 4.1.1.1. Números enteros")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),a._v(" variableByte "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("short")]),a._v(" variableShort "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" variableInt "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")]),a._v(" variableLong "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),s("p",[s("strong",[a._v("Permitido:")]),a._v(" se pueden usar los siguientes formatos:")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("En decimal:")]),a._v(" 23")]),a._v(" "),s("li",[s("strong",[a._v("En octal:")]),a._v(" 023 ← siempre empieza por 0, seguido de dígitos octales (del 0 a 7)")]),a._v(" "),s("li",[s("strong",[a._v("En hexadecimal:")]),a._v(" 0x15 ← siempre empieza por 0x seguido de dígitos hexadecimales del 0 a 9 y de la ‘a’ a la ‘f’ o de la ‘A’ a la ‘F’.")])])]),a._v(" "),s("h4",{attrs:{id:"_4-1-1-2-numeros-reales"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-2-numeros-reales"}},[a._v("#")]),a._v(" 4.1.1.2. Números reales")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("float")]),a._v(" variableFloat "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23.3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" variableDouble "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23.3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),s("p",[s("strong",[a._v("Permitido:")])]),a._v(" "),s("ul",[s("li",[a._v("Si queremos especificar que es un tipo float podemos colocar al final del valor una ele minúscula o mayúscula."),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("float")]),a._v(" variableFloat "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23.3L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("float")]),a._v(" variableFloat "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23.3l")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n")])])])]),a._v(" "),s("li",[a._v("Si queremos especificar que es un tipo double podemos colocar al final del valor una de minúscula o mayúscula."),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" variableDouble "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23.3D")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" variableDouble "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23.3d")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])])])])]),a._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),s("p",[s("strong",[a._v("Cuidado:")]),a._v(" los números reales deben llevar siempre un punto decimal o, de no tenerlo se debe indicar un exponente representado por la letra en minúscula o mayúscula."),s("br"),a._v(" "),s("strong",[s("code",[a._v("1e3")])]),a._v(" que es lo mismo que "),s("strong",[s("code",[a._v("1 x 10^3")])]),s("br"),a._v(" "),s("strong",[s("code",[a._v("3.4E-5")])]),a._v(" que es lo mismo "),s("strong",[s("code",[a._v("3.4 x 10^-5")])])])]),a._v(" "),s("h4",{attrs:{id:"_4-1-1-3-booleanos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-3-booleanos"}},[a._v("#")]),a._v(" 4.1.1.3. Booleanos")]),a._v(" "),s("p",[a._v("Sólo pueden tener dos valores: "),s("strong",[s("code",[a._v("true y false")])]),a._v(", y se escriben siempre en minúscula.")]),a._v(" "),s("h4",{attrs:{id:"_4-1-1-3-caracteres-y-cadenas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-3-caracteres-y-cadenas"}},[a._v("#")]),a._v(" 4.1.1.3. Caracteres y Cadenas")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("char")]),a._v(" variableChar "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" ‘a’"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" variableString "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" “"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Aprendiendo")]),a._v(" con "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Guillermo")]),a._v("”"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),s("p",[s("strong",[a._v("Permitido:")]),a._v(" los caracteres pueden ser expresados por su table Unicode, en octal o en hexadecimal."),s("br"),a._v(" "),s("strong",[s("code",[a._v("‘\\u00A3’")])]),a._v(" ← en hexadecimal"),s("br"),a._v(" "),s("strong",[s("code",[a._v("‘\\102’")])]),a._v(" ← en octal")])]),a._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),s("p",[s("strong",[a._v("Cuidado:")]),a._v(" los caracteres van siempre en comillas simples "),s("strong",[s("code",[a._v("‘’")])]),a._v(" ,mientras que las cadenas van siempre con comillas doble "),s("strong",[s("code",[a._v("“”")])]),a._v(".")])]),a._v(" "),s("p",[a._v("Debemos tener cuidado al momento de asignar un carácter ya que existen caracteres especiales y se los puede ver en la Tabla 2.")]),a._v(" "),s("div",{staticStyle:{"text-align":"center"}},[s("img",{attrs:{src:a.$withBase("/img/caracteres-especiales.png"),alt:"Tabla 2. Sánchez Allende, J. Caracteres especiales en Java"}}),a._v(" "),s("p",[a._v("Tabla 2. Sánchez Allende, J. Caracteres especiales en Java")])]),a._v(" "),s("h2",{attrs:{id:"_4-2-compuestos-y-agregados"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-compuestos-y-agregados"}},[a._v("#")]),a._v(" 4.2 Compuestos y agregados")]),a._v(" "),s("div",{staticStyle:{"text-align":"center"}},[s("iframe",{attrs:{width:"560",height:"315",src:"https://www.youtube.com/embed/1iNHcBiZgmg",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""}})]),a._v(" "),s("h3",{attrs:{id:"_4-2-1-compuestos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-compuestos"}},[a._v("#")]),a._v(" 4.2.1 Compuestos")]),a._v(" "),s("p",[a._v("Son los que se pueden dividir en subcampos que tengan significado. Zohonero Martínez, I., & Joyanes Aguilar, L. (2008.) nos da un ejemplo: Teléfono celular 51199110101; está compuesto por el código del país (51, Perú), el código del área (1, Lima) y el número celular.")]),a._v(" "),s("h3",{attrs:{id:"_4-2-2-agregados"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-agregados"}},[a._v("#")]),a._v(" 4.2.2. Agregados")]),a._v(" "),s("p",[a._v("Son tipos de datos cuyos valores constan de colecciones de elementos de datos, es decir, se componen de datos previamente definidos y existen tres tipos básicos: "),s("em",[a._v("arrays (arreglos), secuencias y registros.")])]),a._v(" "),s("h4",{attrs:{id:"_4-2-2-1-arrays"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-1-arrays"}},[a._v("#")]),a._v(" 4.2.2.1. Arrays")]),a._v(" "),s("p",[a._v("Son una colección de datos de tamaño o longitud fija y todos sus elementos deben ser del mismo tipo."),s("br"),a._v(" "),s("code",[a._v("array de enteros: [4 , 6 , 8]")])]),a._v(" "),s("h4",{attrs:{id:"_4-2-2-2-secuencias"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-2-secuencias"}},[a._v("#")]),a._v(" 4.2.2.2. Secuencias")]),a._v(" "),s("p",[a._v("Son arrays cuyo tamaño puede variar en tiempo de ejecución."),s("br"),a._v(" "),s("code",[a._v("Cadena = “Aprendiendo Java con Guillermo”")])]),a._v(" "),s("h4",{attrs:{id:"_4-2-2-3-registros"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-3-registros"}},[a._v("#")]),a._v(" 4.2.2.3. Registros")]),a._v(" "),s("p",[a._v("Puede contener elementos de datos agregados y primitivos; se puede considerar como un tipo o colección de datos tamaño fijo. Para acceder a sus campos se hace mediante identificadores."),s("br"),a._v(" "),s("code",[a._v("Registro { Dato1, Dato2, Dato3, ...}")])]),a._v(" "),s("h2",{attrs:{id:"_4-3-comprobacion-de-avance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-comprobacion-de-avance"}},[a._v("#")]),a._v(" 4.3. Comprobación de avance")]),a._v(" "),s("p",[a._v("La comprobación se llevará a cabo en una plantilla online donde deberá responder todas las preguntas y después de enviar se mostrará su puntuación. Solo hay una oportunidad.")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://forms.gle/MrRNmhWw2MLyBsWN8",target:"_blank",rel:"noopener noreferrer"}},[a._v("Comprueba lo aprendido 🤓"),s("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);